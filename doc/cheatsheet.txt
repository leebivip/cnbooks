GETTING STARTED / ORGINATION
==============================================

1. Install basic refinery
	refinerycms gardenia -d postgresql --heroku gardenia
2. create database
	sudo su postgres
	creatdb gardenia_dev
3. change database.yml
	dbname: gardenia_dev
	comment out user/password in each prod/dev/test
4. cd gardenia
	rake db:setup	to setup & run the migrations
5. rails server		to run app locally
6. gardenia.heroku.com	to run hosted
	login: alexisdavid
	password: davidalexis
7. setup an Amazon S3 account & buckets... then:
	heroku config:add S3_KEY=AKIAJWMKYYC6DNN5NSCA S3_SECRET=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 S3_BUCKET=dev.majozi.com
8. add html whitelist to config/application.rb
    
    # add video tags to sanitize permitted tags
    config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td', 'iframe'
    config.action_view.sanitized_allowed_attributes = 'id', 'class', 'style', 'src', 'width', 'height', 'frameborder'

	
ENGINE EXPANSION
================================================
1. Install blog engine

	gem 'refinerycms-blog', '~> 1.1.0.0.1, :git => 'git://github.com/dsaronin/refinerycms-blog.git'

	~$ bundle install
	~$ rails generate refinery_blog
	~$ git add .; git commit -a -m 'blog added to bundle'
	~$ git push heroku
	~$ rake db:migrate  (both locally & @ heroku)
	~$ heroku restart

2. Install news engine
===========================

	gem "refinerycms-news", '~> 0.9.9'

	~$ bundle install
	~$ rails generate refinerycms_news
	~$ git add .; git commit -a -m 'blog added to bundle'
	~$ git push heroku
	~$ rake db:migrate  (both locally & @ heroku)
	~$ heroku restart
	
3. Install galleries engine

	gem 'refinerycms-galleries', '~> 0.4.0.2', :require => 'galleries', :git => 'git://github.com/dsaronin/refinerycms-galleries.git'

	~$ bundle install
	~$ rails generate refinery_galleries
	~$ git add .; git commit -a -m 'blog added to bundle'
	~$ git push heroku
	~$ rake db:migrate  (both locally & @ heroku)
	~$ heroku restart

4. RSS (Really Simple Syndication)

	To get RSS for your entire site, insert this into the head section of your layout after installing:
	
		<%= auto_discovery_link_tag(:rss, news_items_url(:format => 'rss'git@github.com:AlexisMasters/tas.git)) %>
		
5. Haml/Sass
	
	gem 'haml'     add to bundle

4. Rails 3 html
	- String#html_safe
	- Helper#raw(string)  outputs html as is

5. OVerrides
	rake refinery:override view=admin/pages/_page_part_field
	rake refinery:override view=news_items/index
	rake refinery:override view=inquiries/new	
	rake refinery:override view=blog/posts/show
	rake refinery:override view=news_items/show
	rake refinery:override view=news_items/index
	
CLONING PROJECTS
===============================================================
env ARCHFLAGS="-arch x86_64" bundle install

cd <workspace>
git clone git@github.com:AlexisMasters/gardenia.git


JMENU USAGE
===============================================================
<ul id="jMenu">
  <li><a class="fNiv">Niveau 1</a> <!-- Don't forget the 'fNiv' class, only on the first level link !! -->
    <ul>
      <li class="arrow"></li> <!-- Only for illustration : arrow_down.png -->
      <li><a>Niveau 2</a></li>  
      <li><a>Niveau 2</a></li>  
      <li><a>Niveau 2</a>  
        <ul>  
          <li><a>Niveau 3</a></li>  
          <li><a>Niveau 3</a></li>  
          <li><a>Niveau 3</a></li>  
          <li><a>Niveau 3</a></li>  
        </ul>  
      </li>  
      <li><a>Niveau 2</a></li>  
    </ul>  
  </li>  
</ul>

GOOGLE ANALYTICS
====================================
How to setup Google Analytics
Default Refinery layouts have Google Analytics support built in. 

To start using Google Analytics on your site go into the “Settings” area and edit the setting called “Analytics Page Code”. Replace “UA-XXXXXX-X” with your Google Analytics code, then click SAVE.

Note: this setting only appears in production. So you won’t see this setting in your development environment.

CONSOLE TOOLS: $ heroku console
==========================================
(next two lines yield list of Refinery 0.9.9 page titles, custom titles)

def plist(list,&block);list.each{|x| puts yield(x)};nil;end;
plist( Page.all(:order => "id") ) {|p| "#{p.id.to_s}\t#{p.title}\t|\t#{p.custom_title}" }

list = Page.all(:order => "id")
plist(list){|x| "#{x.id.to_s}\t#{(x.parent_id.nil? ? '-' : x.parent_id.to_s)}\t#{x.created_at.to_s(:db)}\t#{(x.title.blank? ? '********' : x.title.to_s)}"}

xlist = PagePart.all(:order => "id")
plist(xlist){|x| "#{x.id.to_s}\t#{(x.page_id.nil? ? '-' : x.page_id.to_s)}\t#{x.created_at.to_s(:db)}\t#{(x.title.blank? ? '********' : x.title.to_s)}"}


# to see all tables in db
res = Page.connection.execute("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'")
res.each{|x| puts x['table_name'] }


MIGRATION TO REFINERYCMS 1.0.3
==================================================================
>> make sure to heroku pgbackups:capture --expiry to backup production database

one-time setup
----------------------------------------------------------
rvm setup
  $ rvm install 1.9.2
  $ rvm 1.9.2                               (make sure before creating gemset)
  $ rvm alias create 1.9.2 ruby-1.9.2-p180
  $ rvm gemset create gardenia-1.0
  $ gem update --system    
  $ gem install bundler                     (first time in new gemset)

migration procedure: local first
----------------------------------------------------------
  $ cd <project>
  $ git status                           (git add .; git commit ... if needed)
  $ rm .rvmrc

  $ git pull upstream master
  $ git mergetool                         (resolve all conflicts)
    -- if there were any image file conflicts:
       cp  xxxxx.orig  xxxxxx
       rm  xxxxx.orig
    -- rm  public/stylesheets/application.css
    -- Gemfile: comment in/out banner rotator as needed

  $ cat .rvmrc                        (make sure: rvm 1.9.2@gardenia-1.0)
  $ `cat .rvmrc`
  $ rvm gemdir                        (make sure: rvm 1.9.2@gardenia-1.0)
  $ rm Gemfile.lock

  $ bundle install --without linux:test
  $ rm -rf tmp/index                  (acts_as_indexed has changed)
  $ rake db:migrate
  $ rails server                      (validate app locally)
  $ git status                        (make sure application.css changed)
  $ git add .; git commit -a -m 'xxxx migration to 1.0.3'; git push origin master

archive current custom titles using $ heroku console
----------------------------------------------------------
(next two lines yield list of Refinery 0.9.9 page titles, custom titles)

>> def plist(list,&block);list.each{|x| puts yield(x)};nil;end;
>> plist( Page.all(:order => "id") ) {|p| "#{p.id.to_s}\t#{p.title}\t|\t#{p.custom_title}" }

migration procedure: heroku  
(always verify successful completion of each step before proceeding to the next!)
----------------------------------------------------------
  $ heroku pgbackups                        (verify that current backup exists)
  $ heroku stack:migrate bamboo-mri-1.9.2
  $ git push heroku master
  $ heroku rake db:migrate
  $ heroku restart
  (validate app.heroku via browser)

GETTING STARTED / ORGINATION
==============================================

1. Install basic refinery
	refinerycms gardenia -d postgresql --heroku gardenia
2. create database
	sudo su postgres
	creatdb gardenia_dev
3. change database.yml
	dbname: gardenia_dev
	comment out user/password in each prod/dev/test
4. cd gardenia
	rake db:setup	to setup & run the migrations
5. rails server		to run app locally
6. gardenia.heroku.com	to run hosted
	login: alexisdavid
	password: davidalexis
7. setup an Amazon S3 account & buckets... then:
	heroku config:add S3_KEY=AKIAJWMKYYC6DNN5NSCA S3_SECRET=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 S3_BUCKET=dev.majozi.com
8. add html whitelist to config/application.rb
    
    # add video tags to sanitize permitted tags
    config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td', 'iframe'
    config.action_view.sanitized_allowed_attributes = 'id', 'class', 'style', 'src', 'width', 'height', 'frameborder'

	
ENGINE EXPANSION
================================================
1. Install blog engine

	gem 'refinerycms-blog', '~> 1.1.0.0.1, :git => 'git://github.com/dsaronin/refinerycms-blog.git'

	~$ bundle install
	~$ rails generate refinery_blog
	~$ git add .; git commit -a -m 'blog added to bundle'
	~$ git push heroku
	~$ rake db:migrate  (both locally & @ heroku)
	~$ heroku restart

2. Install news engine
===========================

	gem "refinerycms-news", '~> 0.9.9'

	~$ bundle install
	~$ rails generate refinerycms_news
	~$ git add .; git commit -a -m 'blog added to bundle'
	~$ git push heroku
	~$ rake db:migrate  (both locally & @ heroku)
	~$ heroku restart
	
3. Install galleries engine

	gem 'refinerycms-galleries', '~> 0.4.0.2', :require => 'galleries', :git => 'git://github.com/dsaronin/refinerycms-galleries.git'

	~$ bundle install
	~$ rails generate refinery_galleries
	~$ git add .; git commit -a -m 'blog added to bundle'
	~$ git push heroku
	~$ rake db:migrate  (both locally & @ heroku)
	~$ heroku restart

4. RSS (Really Simple Syndication)

	To get RSS for your entire site, insert this into the head section of your layout after installing:
	
		<%= auto_discovery_link_tag(:rss, news_items_url(:format => 'rss'git@github.com:AlexisMasters/tas.git)) %>
		
5. Haml/Sass
	
	gem 'haml'     add to bundle

4. Rails 3 html
	- String#html_safe
	- Helper#raw(string)  outputs html as is

5. OVerrides
	rake refinery:override view=admin/pages/_page_part_field
	rake refinery:override view=news_items/index
	rake refinery:override view=inquiries/new	
	rake refinery:override view=blog/posts/show
	rake refinery:override view=news_items/show
	rake refinery:override view=news_items/index
	
CLONING PROJECTS
===============================================================
env ARCHFLAGS="-arch x86_64" bundle install

cd <workspace>
git clone git@github.com:AlexisMasters/gardenia.git


JMENU USAGE
===============================================================
<ul id="jMenu">
  <li><a class="fNiv">Niveau 1</a> <!-- Don't forget the 'fNiv' class, only on the first level link !! -->
    <ul>
      <li class="arrow"></li> <!-- Only for illustration : arrow_down.png -->
      <li><a>Niveau 2</a></li>  
      <li><a>Niveau 2</a></li>  
      <li><a>Niveau 2</a>  
        <ul>  
          <li><a>Niveau 3</a></li>  
          <li><a>Niveau 3</a></li>  
          <li><a>Niveau 3</a></li>  
          <li><a>Niveau 3</a></li>  
        </ul>  
      </li>  
      <li><a>Niveau 2</a></li>  
    </ul>  
  </li>  
</ul>

GOOGLE ANALYTICS
====================================
How to setup Google Analytics
Default Refinery layouts have Google Analytics support built in. 

To start using Google Analytics on your site go into the “Settings” area and edit the setting called “Analytics Page Code”. Replace “UA-XXXXXX-X” with your Google Analytics code, then click SAVE.

Note: this setting only appears in production. So you won’t see this setting in your development environment.

TOOLS
==========================================
def plist(list,&block);list.each{|x| puts yield(x)};nil;end;
list = Page.all(:order => "id")
plist(list){|x| "#{x.id.to_s}\t#{(x.parent_id.nil? ? '-' : x.parent_id.to_s)}\t#{x.created_at.to_s(:db)}\t#{(x.title.blank? ? '********' : x.title.to_s)}"}

xlist = PagePart.all(:order => "id")
plist(xlist){|x| "#{x.id.to_s}\t#{(x.page_id.nil? ? '-' : x.page_id.to_s)}\t#{x.created_at.to_s(:db)}\t#{(x.title.blank? ? '********' : x.title.to_s)}"}


# to see all tables in db
res = Page.connection.execute("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'")
res.each{|x| puts x['table_name'] }


MIGRATION TO REFINERYCMS 1.0.3
==================================================================
>> make sure to heroku pgbackups:capture --expiry to backup production database

1. git pull upstream master
2. rvm setup
   -- $ rvm install 1.9.2 (do only once)
   -- $ rvm 1.9.2    (make sure before creating gemset
   -- $ rvm alias create 1.9.2 ruby-1.9.2-p180
   -- $ rvm gemset create gardenia-1.0
3. check .rvmrc, make sure points to this new gemset
4. rm Gemfile.lock
5. gem update --system    (do only once)
6. gem install bundler   (first time in new gemset)
7. bundle install --without linux:test
8. rm -rf tmp/index   # because acts_as_indexed has changed
9. rake db:migrate
10. rails server

>>> going to heroku
>>> $ heroku pgbackups

1. $ heroku stack:migrate bamboo-mri-1.9.2
2. $ git push heroku
3. $ heroku rake db:migrate
4. $ heroku restart
